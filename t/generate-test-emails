test_update refs/heads/master refs/heads/master^^ -c multimailhook.refChangeShowGraph=true -c multimailhook.graphOpts=--oneline
test_update refs/heads/master refs/heads/feature -c multimailhook.from="John O'Connor <john@example.com>"
test_delete refs/heads/master
test_rewind refs/heads/master refs/heads/master^^
test_rewind refs/heads/master refs/heads/feature
test_rewind refs/heads/master refs/heads/master^

test_update refs/heads/release refs/heads/release^^^^

# Should send both summary and revision email:
test_update refs/heads/release refs/heads/release^ -c multimailhook.dateSubstitute='MyDate: '
# Should send a combined email:
verbose_do git config multimailhook.refchangelist 'Commit List <commitlist@example.com>'
test_update refs/heads/release refs/heads/release^ \
	-c multimailhook.dateSubstitute=none
test_update refs/heads/release refs/heads/release^ \
	-c multimailhook.dateSubstitute=none \
	-c multimailhook.combineWhenSingleCommit=false
verbose_do git config multimailhook.refchangelist 'Refchange List <refchangelist@example.com>'

test_rewind refs/heads/release refs/heads/release^^ -c multimailhook.refChangeShowGraph=true

test_create refs/heads/feature
test_update refs/heads/feature refs/heads/feature^^^
test_rewind refs/heads/feature refs/heads/feature^^^
test_delete refs/heads/feature

verbose_do git config multimailhook.fromCommit author
verbose_do git config --unset multimailhook.from
test_create refs/remotes/remote
test_update refs/remotes/remote refs/heads/master
verbose_do git config multimailhook.fromRefChange 'From RefChange <from@example.com>'
test_delete refs/remotes/remote

test_create refs/foo/bar
test_update refs/foo/bar refs/heads/master
verbose_do git config multimailhook.from 'From <from@example.com>'
verbose_do git config multimailhook.fromRefChange pusher
verbose_do git config --unset multimailhook.fromCommit
verbose_do test_delete refs/foo/bar

verbose_do test_hook refs/heads/master refs/heads/master^^

verbose_do git config multimailhook.scanCommitForCc true
test_update refs/heads/formatting refs/heads/formatting^^^
verbose_do git config --unset multimailhook.fromRefChange

verbose_do git config --unset multimailhook.from

verbose_do git config multimailhook.refChangeShowGraph true
f=$(git rev-parse feature)
verbose_do git branch -D feature
# git log --decorate behaves differently with different Git versions
# on non-detached HEAD
verbose_do git update-ref --no-deref HEAD HEAD
verbose_do git config multimailhook.commitList ''
verbose_do git config multimailhook.from 'From <from@example.com>'
test_update refs/heads/master refs/heads/foo
verbose_do git config multimailhook.refChangeShowGraph false
git branch feature "$f"
verbose_do git config multimailhook.commitList 'Commit List <commitlist@example.com>'

for o in mailinglist refchangelist announcelist commitlist; do
    verbose_do git config multimailhook."$o" ''
done
test_update refs/heads/formatting refs/heads/formatting^^^

